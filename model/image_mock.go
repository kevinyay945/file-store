// Code generated by MockGen. DO NOT EDIT.
// Source: my-imgur/model (interfaces: IImage)

// Package model is a generated GoMock package.
package model

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIImage is a mock of IImage interface.
type MockIImage struct {
	ctrl     *gomock.Controller
	recorder *MockIImageMockRecorder
}

// MockIImageMockRecorder is the mock recorder for MockIImage.
type MockIImageMockRecorder struct {
	mock *MockIImage
}

// NewMockIImage creates a new mock instance.
func NewMockIImage(ctrl *gomock.Controller) *MockIImage {
	mock := &MockIImage{ctrl: ctrl}
	mock.recorder = &MockIImageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIImage) EXPECT() *MockIImageMockRecorder {
	return m.recorder
}

// GetPublicThumbnailLink mocks base method.
func (m *MockIImage) GetPublicThumbnailLink(arg0 string, arg1, arg2, arg3 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublicThumbnailLink", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPublicThumbnailLink indicates an expected call of GetPublicThumbnailLink.
func (mr *MockIImageMockRecorder) GetPublicThumbnailLink(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublicThumbnailLink", reflect.TypeOf((*MockIImage)(nil).GetPublicThumbnailLink), arg0, arg1, arg2, arg3)
}

// UploadFile mocks base method.
func (m *MockIImage) UploadFile(arg0 string, arg1 []byte) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockIImageMockRecorder) UploadFile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockIImage)(nil).UploadFile), arg0, arg1)
}
